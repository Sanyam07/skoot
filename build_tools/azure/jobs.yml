jobs:
- job: Windows

  pool:
    vmImage: 'vs2017-win2016'

  strategy:
    maxParallel: 6
    matrix:
#      Python35-x86:
#        python.version: '3.5'
#        architecture: 'x86'

#      Python35-x64:
#        python.version: '3.5'
#        architecture: 'x64'

      Python36-x86:
        python.version: '3.6'
        architecture: 'x86'

      Python36-x64:
        python.version: '3.6'
        architecture: 'x64'

#      Python37-x86:
#        python.version: '3.7'
#        architecture: 'x86'

#      Python37-x64:
#        python.version: '3.7'
#        architecture: 'x64'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: '$(architecture)'
    displayName: 'Setting Python version and system architecture'

  - powershell: |
      $pyversion = python -c "import sys; print(sys.version.split()[0])"
      Write-Host "Python Version: $pyversion"
      $target = "C:\\hostedtoolcache\\windows\\Python\\$pyversion\\$(architecture)\\lib\\openblas.a"
      Write-Host "target path: $target"
      $openblas = python build_tools/azure/openblas_support.py
      cp $openblas $target
      ls C:\\hostedtoolcache\\windows\\Python\\$pyversion\\$(architecture)\\lib
    displayName: 'Download/Install openBLAS'

  - template: build_and_deploy.yml

#- job: macOS
#
#  pool:
#    vmImage: 'macOS-10.13'  # Also have the option of 10.14, if we want that
#
#  strategy:
#    maxParallel: 3
#    matrix:
#      Python35:
#        python.version: '3.5'
#
#      Python36:
#        python.version: '3.6'
#
#      Python37:
#        python.version: '3.7'
#
#  steps:
#  - task: UsePythonVersion@0
#    inputs:
#      versionSpec: '$(python.version)'
#    displayName: 'Setting Python version'
#
#  - script: brew cask install gfortran
#    displayName: 'Installing Fortran'
#
#  - template: build_and_deploy.yml

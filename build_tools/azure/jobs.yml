jobs:
- job: Windows

  pool:
    vmImage: 'vs2017-win2016'

  variables:
    OPENBLAS_32: https://3f23b170c54c2533c070-1c8a9b3114517dc5fe17b7c3f8c63a43.ssl.cf2.rackcdn.com/openblas-v0.3.5-274-g6a8b4269-win32-gcc_7_1_0.zip
    OPENBLAS_64: https://3f23b170c54c2533c070-1c8a9b3114517dc5fe17b7c3f8c63a43.ssl.cf2.rackcdn.com/openblas-v0.3.5-274-g6a8b4269-win_amd64-gcc_7_1_0.zip
    FFTW_32: ftp://ftp.fftw.org/pub/fftw/fftw-3.3.5-dll32.zip
    FFTW_64: ftp://ftp.fftw.org/pub/fftw/fftw-3.3.5-dll64.zip

  strategy:
    maxParallel: 6
    matrix:
#      Python35-x86:
#        python.version: '3.5'
#        architecture: 'x86'

#      Python35-x64:
#        python.version: '3.5'
#        architecture: 'x64'

      Python36-x86:
        python.version: '3.6'
        architecture: 'x86'
        OPENBLAS: $(OPENBLAS_32)
        FFTW: $(FFTW_32)
        BITS: 32

      Python36-x64:
        python.version: '3.6'
        architecture: 'x64'
        OPENBLAS: $(OPENBLAS_64)
        FFTW: $(FFTW_64)
        BITS: 64

#      Python37-x86:
#        python.version: '3.7'
#        architecture: 'x86'

#      Python37-x64:
#        python.version: '3.7'
#        architecture: 'x64'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: '$(architecture)'
    displayName: 'Setting Python version and system architecture'

  - script: choco upgrade microsoft-r-open
    displayName: 'Installing Intel MKL'

  - powershell: |
      $wc = New-Object net.webclient;
      $wc.Downloadfile("$(FFTW)", "fftw.zip")
      $tmpdir = New-TemporaryFile | %{ rm $_; mkdir $_ }
      Expand-Archive "fftw.zip" $tmpdir
      $pyversion = python -c "import sys; print(sys.version.split()[0])"
      Write-Host "Python Version: $pyversion"
      $target = "C:\\hostedtoolcache\\windows\\Python\\$pyversion\\$(architecture)\\lib"
      Write-Host "target path: $target"
      cp $tmpdir $target
    displayName: 'Download / Install FFTW'

  - powershell: |
        $wc = New-Object net.webclient;
        $wc.Downloadfile("$(OPENBLAS)", "openblas.zip")
        $tmpdir = New-TemporaryFile | %{ rm $_; mkdir $_ }
        Expand-Archive "openblas.zip" $tmpdir
        $pyversion = python -c "import sys; print(sys.version.split()[0])"
        Write-Host "Python Version: $pyversion"
        $target = "C:\\hostedtoolcache\\windows\\Python\\$pyversion\\$(architecture)\\lib\\openblas.a"
        Write-Host "target path: $target"
        cp $tmpdir\$(BITS)\lib\libopenblas_v0.3.5-274-g6a8b4269-gcc_7_1_0.a $target
    displayName: 'Download / Install OpenBLAS'

  - powershell: |
      # wheels appear to use mingw64 version 6.3.0, but 6.4.0
      # is the closest match available from choco package manager
      choco install -y mingw --forcex86 --force --version=6.4.0
    displayName: 'Install 32-bit mingw for 32-bit builds'
    condition: eq(variables['BITS'], 32)

  - powershell: |
      choco install -y mingw --force --version=6.4.0
    displayName: 'Install 64-bit mingw for 64-bit builds'
    condition: eq(variables['BITS'], 64)

  - powershell: ls C:\\hostedtoolcache\\windows\\Python\\$pyversion\\$(architecture)\\DLLs
    displayName: 'Checking for DLLs'

  - powershell: |
      If ($(BITS) -eq 32) {
          # 32-bit build requires careful adjustments
          # until Microsoft has a switch we can use
          # directly for i686 mingw
          $env:NPY_DISTUTILS_APPEND_FLAGS = 1
          $env:CFLAGS = "-m32"
          $env:LDFLAGS = "-m32"
          refreshenv
      }
      $env:PATH = "C:\\hostedtoolcache\\windows\\Python\\$pyversion\\$(architecture)\\lib;" + $env:PATH
      $env:PATH = "C:\\ProgramData\\chocolatey\\lib\\mingw\\tools\\install\\mingw$(BITS)\\bin;" + $env:PATH
    displayName: 'Set PATH'

  - template: build_and_deploy.yml

#- job: macOS
#
#  pool:
#    vmImage: 'macOS-10.13'  # Also have the option of 10.14, if we want that
#
#  strategy:
#    maxParallel: 3
#    matrix:
#      Python35:
#        python.version: '3.5'
#
#      Python36:
#        python.version: '3.6'
#
#      Python37:
#        python.version: '3.7'
#
#  steps:
#  - task: UsePythonVersion@0
#    inputs:
#      versionSpec: '$(python.version)'
#    displayName: 'Setting Python version'
#
#  - script: brew cask install gfortran
#    displayName: 'Installing Fortran'
#
#  - template: build_and_deploy.yml
